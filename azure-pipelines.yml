# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

stages:
  - stage: 
    jobs:
      - job: init
        steps:
        - task: TerraformInstaller@0
          inputs:
            terraformVersion: '1.0.0' # Specify the desired Terraform version

        - task: TerraformTaskV4@4
          inputs:
            provider: 'aws'
            command: 'init'
            backendServiceAWS: 'aws-sc'
            backendAWSBucketName: 'mytestapplication1234'
            backendAWSKey: 'terraform.tfstate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/aws-practice/modules/vpc'

        - task: TerraformTaskV4@4
          inputs:
            provider: 'aws'
            backendServiceAWS: 'aws-sc'
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/aws-practice/modules/vpc'
        - task: TerraformTaskV4@4
          inputs:
            provider: 'aws'
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/aws-practice/modules/vpc'
            environmentServiceNameAWS: 'aws-sc'
        - task: TerraformTaskV4@4
          inputs:
            provider: 'aws'
            command: 'apply'
            environmentServiceNameAWS: 'aws-sc'
            workingDirectory: '$(System.DefaultWorkingDirectory)/aws-practice/modules/vpc'
